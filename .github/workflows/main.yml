name: Docker build and push
on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: "0 2 * * 0"
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1
  ROCKY_VERSION: 9
  POSTGRES_VERSION: 15

jobs:
  ruby:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    strategy:
      matrix:
        ruby: ["3.1", "2.7"]
        version: [
          "default",
          "jemalloc",
          "nodejs",
          "nodejs-jemalloc"
        ]
        include:
          - ruby: "2.7"
            rocky_version: 8
          - ruby: "3.1"
            rocky_version: 9

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: Dockerfile
          config: hadolint-ci.yaml

      - name: Set image name
        run: echo "DOCKER_IMAGE=ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/ruby" >> "$GITHUB_ENV"

      - name: Render docker-compose.yml
        run: RUBY_VERSION=${{ matrix.ruby }} ROCKY_VERSION=${{ matrix.rocky_version }} envsubst <  docker-compose.yml.tmpl >  docker-compose.yml

      - name: Build image
        run: COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose -f docker-compose.yml build ${{ matrix.version }}

      - name: Tag image
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        run: |
          docker tag ruby:${{ matrix.ruby }}-${{ matrix.version }} ${DOCKER_IMAGE}:${{ matrix.ruby }}-${{ matrix.version }}
          docker tag ruby:${{ matrix.ruby }}-${{ matrix.version }} ${DOCKER_IMAGE}:${{ matrix.ruby }}-${{ matrix.version }}-${{ github.run_number }}

      - name: Log into registry
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push images
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
        run: |
          docker push ${DOCKER_IMAGE}:${{ matrix.ruby }}
          docker push ${DOCKER_IMAGE}:${{ matrix.ruby }}-${{ github.run_number }}

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ success() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: green
          SLACK_MESSAGE: 'Good luck, this time... :rocket:'
          SLACK_TITLE: Build successful

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ failure() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: red
          SLACK_MESSAGE: 'Seems whatever you did failed :unrocket:'
          SLACK_TITLE: Build failed
